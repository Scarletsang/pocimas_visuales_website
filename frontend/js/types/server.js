/**
 * JSON data that are sent from the server.
 * @namespace ServerTypes
 */

/**
 * The scope data in JSON format
 * @typedef  {object} ServerTypes.ScopeData
 * @property {string} name the name/id of the scope.
 * @property {BasicTypes.NodeId} head the starting node of the scope.
 * @property {Array<BasicTypes.NodeId>} members all the members in the scope.
 */

/**
 * The data of each node in JSON format
 * @typedef  {object} ServerTypes.NodeRawData
 * @property {BasicTypes.NodeId} id A unique ID of the node
 * @property {string} title Title of the node that will be shown in the navigation bar of the website
 * @property {"home" | "info" | "cinema" | "resource" | "choice"} structure A keyword describing how should the page be rendered. The structure of the {@link ServerTypes.NodeRawData.data data property} changes vastly depending on this property.
 * @property {"home" | "hide" | string} [nav]
 * @property {string} [nextLessonBtnText] The text of the button that directs the user to the next node (page).
 * @property {Array<BasicTypes.NodeId>} [nextIds] An array of possible nodes that this node can go to. The directed graph that the {@link NodeWalker} walks on is created from this property.
 * @property {BasicTypes.HTMLContent} [html] The unstructured data of the page that are in HTML format. This content is generated by a markdown parser in the backend.
 * @property {PageTypes.HomePage | PageTypes.ResourcePage | PageTypes.ChoicePage | PageTypes.CinemaPage} [data] The structured data that are needed by the page. The structure of this data depends on the {@link ServerTypes.NodeRawData.structure structure property}.
 */

exports.unused = {};